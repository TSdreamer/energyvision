name: Build & deploy studio
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'studio/**/*'
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      SANITY_STUDIO_PROJECT_URL: ${{secrets.SANITY_STUDIO_PROJECT_URL}}
      SANITY_STUDIO_BRANDMASTER_URL: ${{secrets.SANITY_STUDIO_BRANDMASTER_URL}}
      SANITY_STUDIO_BRANDMASTER_PLUGIN_SOURCE: ${{secrets.SANITY_STUDIO_BRANDMASTER_PLUGIN_SOURCE}}
      SANITY_STUDIO_PREVIEW_SECRET: ${{secrets.SANITY_STUDIO_PREVIEW_SECRET}}
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
      - name: Cache pnpm modules 💾
        uses: actions/cache@v2
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
      - name: Install pnpm 📦
        id: install-pnpm
        uses: pnpm/action-setup@v2.0.0
        with:
          version: latest
      - name: Install dependencies 🔧
        id: install-dependencies
        run: |
          pnpm install
          pnpm studio yarn
      - name: Run ESLint 🔎
        id: lint
        run: |
          pnpm lint:studio
      - name: Deploy 🚀
        id: deploy
        working-directory: ./studio
        run: |
          pnpm deploy
        env:
          SANITY_AUTH_TOKEN: ${{ secrets.SANITY_DEPLOY }}

      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()

  deploy-brazil:
    needs: deploy
    runs-on: ubuntu-latest
    env:
      APP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.K8S_CREDENTIALS }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - uses: actions/checkout@v1
      - name: Set default image tag 🏷
        id: set-default-image-tag
        run: |
          echo "IMAGE_TAG=$(echo ${GITHUB_REF##*/}-latest)" >> $GITHUB_ENV
      - name: Build sanity container ⚙️
        id: build
        run: |
          docker build . --build-arg ARG_SANITY_DATASET=brazil --file studio/Dockerfile --tag ghcr.io/equinor/energyvision/studio-brazil:${{ env.IMAGE_TAG }}
      - name: Push the image to GHCR ☁
        id: push-to-ghcr
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push ghcr.io/equinor/energyvision/studio-brazil:${{ env.IMAGE_TAG }}
      - name: Get environment from branch 🦞
        id: get-environment
        uses: equinor/radix-github-actions@master
        with:
          args: >
            get config branch-environment
            --from-config
            -b ${GITHUB_REF##*/}
      - name: Deploy API on Radix 🚀
        id: deploy
        uses: equinor/radix-github-actions@master
        with:
          args: >
            create job
            deploy
            --token-environment
            --from-config
            -e ${{ steps.get-environment.outputs.result }}
            -f
      - name: log-errors-to-slack 📄
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()

  deploy-germany:
    needs: deploy
    runs-on: ubuntu-latest
    env:
      APP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.K8S_CREDENTIALS }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - uses: actions/checkout@v1
      - name: Set default image tag 🏷
        id: set-default-image-tag
        run: |
          echo "IMAGE_TAG=$(echo ${GITHUB_REF##*/}-latest)" >> $GITHUB_ENV
      - name: Build sanity container ⚙️
        id: build
        run: |
          docker build . --build-arg ARG_SANITY_DATASET=germany --file studio/Dockerfile --tag ghcr.io/equinor/energyvision/studio-germany:${{ env.IMAGE_TAG }}
      - name: Push the image to GHCR ☁
        id: push-to-ghcr
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push ghcr.io/equinor/energyvision/studio-germany:${{ env.IMAGE_TAG }}
      - name: Get environment from branch 🦞
        id: get-environment
        uses: equinor/radix-github-actions@master
        with:
          args: >
            get config branch-environment
            --from-config
            -b ${GITHUB_REF##*/}
      - name: Deploy API on Radix 🚀
        id: deploy
        uses: equinor/radix-github-actions@master
        with:
          args: >
            create job
            deploy
            --token-environment
            --from-config
            -e ${{ steps.get-environment.outputs.result }}
            -f
      - name: log-errors-to-slack 📄
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()
