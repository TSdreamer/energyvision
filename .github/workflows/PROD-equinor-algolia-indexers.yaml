name: PROD - Equinor Algolia Indexers
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'search/**'
      - '!search/README.md'
env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  AZURE_RESOURCE_GROUP_NAME: 'envisRGDev'
  AZURE_FUNCTIONAPP_NAME: 'equinor-algolia-indexers'

jobs:
  check-code:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
      - name: Install pnpm üì¶
        id: install-pnpm
        uses: pnpm/action-setup@v2.0.0
        with:
          version: latest
      - name: Cache pnpm modules üíæ
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: 'pnpm'
      - name: Install dependencies üîß
        id: install-dependencies
        run: |
          pnpm install --frozen-lockfile
          pnpm install --frozen-lockfile --filter search-indexers
      - name: Run ESLint üîé
        id: lint
        run: |
          pnpm lint:search
      - name: Run tests üîç
        id: test
        run: |
          pnpm search-indexers test
      - name: log-errors-to-slack üìÑ
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()

  deploy-az-infrastructure:
    needs: check-code
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Login to Azure üå•Ô∏è
        id: login-to-azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.EQUINOR_ALGOLIA_INDEXERS_CREDENTIALS }}

      # Makes source code accessible via $github.workspace
      - name: Checkout internal üõéÔ∏è
        id: checkout-internal
        uses: actions/checkout@v3
        with:
          repository: 'equinor/energyvision-internal'
          ref: main
          token: ${{ secrets.PAT }}

      - name: 'Creating Azure Function App'
        id: create-azure-app
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az deployment group create \
            --name az-func-algolia-sanity-deploy \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP_NAME }} \
            --template-file $GITHUB_WORKSPACE/ci/azArmTemplates/equinor-algolia-indexers/template.json \
            --mode incremental \
            --parameters $GITHUB_WORKSPACE/ci/azArmTemplates/equinor-algolia-indexers/parameters.json \
      - name: log-errors-to-slack üìÑ
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()

  build-function-application:
    needs: check-code
    runs-on: ubuntu-latest
    env:
      BUILD_OUTPUT_PATH: ${{ github.workspace }}/search
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
      - name: Install pnpm üì¶
        id: install-pnpm
        uses: pnpm/action-setup@v2.0.0
        with:
          version: latest
      - name: Cache pnpm modules üíæ
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: 'pnpm'
      - name: Install dependencies üîß
        id: install-dependencies
        run: |
          pnpm install --frozen-lockfile
          pnpm i -F ./search --frozen-lockfile --virtual-store-dir search/node_modules/.pnpm
          pnpm install --frozen-lockfile --filter search-indexers
      - name: Build ‚öô
        id: build-functions
        run: |
          pnpm search-indexers build
      - name: Package Azure Function release build
        id: package-artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          path: ${{ env.BUILD_OUTPUT_PATH }}
      - name: log-errors-to-slack üìÑ
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()

  deploy-function-application:
    environment:
      name: production
    needs: [build-function-application, deploy-az-infrastructure]
    runs-on: ubuntu-latest
    steps:
      - name: Login to Azure üå•Ô∏è
        id: login-to-azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.EQUINOR_ALGOLIA_INDEXERS_CREDENTIALS }}
          enable-AzPSSession: true

      - name: Fetching Azure Functions Publishing Profile
        id: fetch-publishing-profile
        uses: azure/powershell@v1
        with:
          inlineScript: |
              $profile = ""
              $profile = Get-AzWebAppPublishingProfile -ResourceGroupName $env:AZURE_RESOURCE_GROUP_NAME -Name $env:AZURE_FUNCTIONAPP_NAME
              $profile = $profile.Replace("`r", "").Replace("`n", "")
              Write-Output "::set-output name=pubprofile::$profile"
              Remove-Variable profile
          azPSVersion: "latest"

      # Fetch published code
      - name: Download Azure function release build
        id: download-artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          path: ${{ env.AZURE_FUNCTIONAPP_NAME }}

      # Deploy Azure functions code
      - name: Run Azure Functions Action
        id: deploy
        uses: azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          publish-profile: ${{ steps.fetch-publishing-profile.outputs.pubprofile }}

      - name: log-errors-to-slack üìÑ
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()
