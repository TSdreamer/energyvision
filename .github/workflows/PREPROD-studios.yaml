name: PREPROD - Build & deploy all studios
on:
  workflow_dispatch:
  schedule:
    - cron: '0 20 * * *'
jobs:
  check-code:
    runs-on: ubuntu-latest
    environment:
      name: preprod
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      SANITY_STUDIO_BRANDMASTER_URL: ${{secrets.SANITY_STUDIO_BRANDMASTER_URL}}
      SANITY_STUDIO_BRANDMASTER_PLUGIN_SOURCE: ${{secrets.SANITY_STUDIO_BRANDMASTER_PLUGIN_SOURCE}}
      SANITY_STUDIO_PREVIEW_SECRET: ${{secrets.SANITY_STUDIO_PREVIEW_SECRET}}
      SANITY_STUDIO_API_DATASET: global
      DOCKER_BUILDKIT: 1
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: yarn
          cache-dependency-path: 'studio/yarn.lock'
      - name: Install pnpm üì¶
        id: install-pnpm
        uses: pnpm/action-setup@v2.0.0
        with:
          version: latest
      - name: Install dependencies üîß
        id: install-dependencies
        run: |
          pnpm install
          pnpm studio yarn
      - name: Run ESLint üîé
        id: lint
        run: |
          pnpm lint:studio
     # - name: Deploy üöÄ
     #   id: deploy
     #   working-directory: ./studio
     #   run: |
     #     pnpm deploy
     #   env:
     #     SANITY_AUTH_TOKEN: ${{ secrets.SANITY_DEPLOY }}

      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()

  update-radix-config:
    needs: check-code
    runs-on: ubuntu-latest
    environment: preprod
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
      - id: update-radix-config
        uses: ./.github/workflows/update-radixconfig/
        with:
          PAT: ${{ secrets.PAT }}
          component: studio

  read-satellites:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        name: Read from satellites.json
        run: |
          MATRIX=$(cat satellites.json)
          echo ::set-output name=matrix::${MATRIX}

      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()

  deploy-satellites:
    needs: [update-radix-config, read-satellites]
    runs-on: ubuntu-latest
    environment:
      name: preprod
    strategy:
      matrix:
        dataset: ${{ fromJson(needs.read-satellites.outputs.matrix) }}
    env:
      APP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.K8S_CREDENTIALS }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      DOCKER_BUILDKIT: 1
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
      - id: deploy-satellite
        uses: ./.github/workflows/deploy-studios/
        with:
          imageName: ghcr.io/equinor/energyvision/studio-${{ matrix.dataset }}
          datasetName: ${{ matrix.dataset }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          sanityPreviewToken: ${{ secrets.SANITY_STUDIO_PREVIEW_SECRET }}
          brandmasterUrl: ${{ secrets.SANITY_STUDIO_BRANDMASTER_URL }}
          brandmasterPluginSource: ${{ secrets.SANITY_STUDIO_BRANDMASTER_PLUGIN_SOURCE }}
          environment: ${{ secrets.ENV }}
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()
